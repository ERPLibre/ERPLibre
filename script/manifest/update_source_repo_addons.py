#!/usr/bin/env python3
# Â© 2021-2024 TechnoLibre (http://www.technolibre.ca)
# License AGPL-3.0 or later (http://www.gnu.org/licenses/agpl)

import argparse
import logging
import os
import sys
from script.git.git_tool import GitTool

logging.basicConfig(level=os.environ.get("LOGLEVEL", "INFO"))

_logger = logging.getLogger(__name__)
CST_EL_GITHUB_TOKEN = "EL_GITHUB_TOKEN"


def get_config():
    """Parse command line arguments, extracting the config file name,
    returning the union of config file and command line arguments

    :return: dict of config file settings and command line arguments
    """
    config = GitTool.get_project_config()
    parser = argparse.ArgumentParser(
        formatter_class=argparse.RawDescriptionHelpFormatter,
        description="""\
        Search into all git repo manifest and inform missing repository.
""",
        epilog="""\
""",
    )
    parser.add_argument(
        "--github_token",
        dest="github_token",
        default=config.get(CST_EL_GITHUB_TOKEN),
        help="GitHub token generated by user",
    )
    args = parser.parse_args()

    return args


def die(cond, message, code=1):
    if cond:
        print(message, file=sys.stderr)
        sys.exit(code)


def main():
    config = get_config()
    git_tool = GitTool()
    manifest_dir = "./manifest/"
    set_unique_repo_url = set()
    set_root_unique_repo_url = set()
    for manifest_file_path in os.listdir(manifest_dir):
        if manifest_file_path.startswith("default.dev.odoo"):
            lst_manifest_line = git_tool.get_repo_info_manifest_xml(manifest_file=manifest_dir + manifest_file_path)
            for dct_info in lst_manifest_line:
                set_unique_repo_url.add(dct_info.get("url"))
    for unique_repo_url in set_unique_repo_url:
        root_repo = git_tool.get_root_forked_repo(unique_repo_url)
        set_root_unique_repo_url.add(root_repo)
    print("no result")



if __name__ == "__main__":
    main()
