#!/bin/bash

# V√©rification des arguments
if [ -z "$1" ]; then
    echo "Usage: $0 <VMID> [-d <d√©lai en secondes>]"
    exit 1
fi

VMID=$1
STORAGE="CephNVMe"  # Modifie selon ton stockage (ex: CephNVMe, local, local-lvm)
DELAY=0  # Valeur par d√©faut pour le d√©lai

# Analyse des arguments
while [[ $# -gt 0 ]]; do
    case $1 in
        -d|--delay)
            if [[ -n $2 && $2 =~ ^[0-9]+$ ]]; then
                DELAY=$2
                shift 2
            else
                echo "Erreur : l'option -d n√©cessite un argument num√©rique (ex: -d 5)."
                exit 1
            fi
            ;;
        *)
            shift
            ;;
    esac
done

# Appliquer le d√©lai, si sp√©cifi√©
if [ "$DELAY" -gt 0 ]; then
    echo "‚è≥ Attente de $DELAY secondes..."
    sleep $DELAY
fi

# √âtape 1 : √âteindre la VM
echo "üìå Arr√™t de la VM $VMID..."
qm stop $VMID

# √âtape 2 : Changer la machine en q35 et le BIOS en OVMF
echo "üîß Changement du BIOS en OVMF et de la machine en q35..."
qm set $VMID --machine q35 --bios ovmf

# √âtape 3 : Ajouter un disque EFI si non existant
echo "üíæ V√©rification du disque EFI..."
EFI_DISK_EXIST=$(qm config $VMID | grep efidisk0)

if [ -z "$EFI_DISK_EXIST" ]; then
    echo "‚ûï Ajout d'un disque EFI..."
    rbd create $STORAGE/vm-$VMID-disk-efi --size 4M
    qm set $VMID --efidisk0 $STORAGE:vm-$VMID-disk-efi
else
    echo "‚úÖ Le disque EFI existe d√©j√†."
fi

# √âtape 4 : Red√©marrer la VM
echo "üöÄ Red√©marrage de la VM $VMID..."
qm start $VMID

echo "‚úÖ Conversion termin√©e ! La VM est maintenant en mode q35 + OVMF avec un disque EFI."

